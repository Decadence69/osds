{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User-PC\\\\Desktop\\\\FYP\\\\osds\\\\src\\\\components\\\\pages\\\\Debates.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../../App.css';\nimport firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Debates() {\n  _s();\n  const [debates, setDebates] = useState([]);\n\n  // Function to fetch debates from Firestore\n  const fetchDebates = async () => {\n    // try {\n    //   const debatesCollection = firebase.firestore().collection('debates');\n    //   const snapshot = await debatesCollection.get();\n    //   const debatesData = snapshot.docs.map(doc => doc.data());\n    //   setDebates(debatesData);\n    // } catch (error) {\n    //   console.error('Error fetching debates:', error);\n    // }\n  };\n  useEffect(() => {\n    // Load debates when component mounts\n    // fetchDebates();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"Create Debate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"debates-container\",\n      children: debates.map((debate, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"debate-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: debate.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: debate.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(Debates, \"oB0YVZgo/iduKTZlkZ/js6qriPs=\");\n_c = Debates;\nexport default Debates;\nvar _c;\n$RefreshReg$(_c, \"Debates\");","map":{"version":3,"names":["React","useState","useEffect","firebase","jsxDEV","_jsxDEV","Fragment","_Fragment","Debates","_s","debates","setDebates","fetchDebates","children","fileName","_jsxFileName","lineNumber","columnNumber","className","map","debate","index","title","description","_c","$RefreshReg$"],"sources":["C:/Users/User-PC/Desktop/FYP/osds/src/components/pages/Debates.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../../App.css';\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\n\r\nfunction Debates() {\r\n  const [debates, setDebates] = useState([]);\r\n\r\n  // Function to fetch debates from Firestore\r\n  const fetchDebates = async () => {\r\n    // try {\r\n    //   const debatesCollection = firebase.firestore().collection('debates');\r\n    //   const snapshot = await debatesCollection.get();\r\n    //   const debatesData = snapshot.docs.map(doc => doc.data());\r\n    //   setDebates(debatesData);\r\n    // } catch (error) {\r\n    //   console.error('Error fetching debates:', error);\r\n    // }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Load debates when component mounts\r\n    // fetchDebates();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <button /*onClick={}*/>Create Debate</button>\r\n\r\n      <div className=\"debates-container\">\r\n        {/* Map through debates and display as item cards */}\r\n        {debates.map((debate, index) => (\r\n          <div key={index} className=\"debate-card\">\r\n            <h3>{debate.title}</h3>\r\n            <p>{debate.description}</p>\r\n            {/* Additional debate info can go here */}\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Debates;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,eAAe;AACtB,OAAOC,QAAQ,MAAM,cAAc;AACnC,OAAO,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE5B,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;;EAE1C;EACA,MAAMW,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EAAA,CACD;EAEDV,SAAS,CAAC,MAAM;IACd;IACA;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,oBACEG,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA;MAAAQ,QAAA,EAAuB;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAE7CZ,OAAA;MAAKa,SAAS,EAAC,mBAAmB;MAAAL,QAAA,EAE/BH,OAAO,CAACS,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACzBhB,OAAA;QAAiBa,SAAS,EAAC,aAAa;QAAAL,QAAA,gBACtCR,OAAA;UAAAQ,QAAA,EAAKO,MAAM,CAACE;QAAK;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACvBZ,OAAA;UAAAQ,QAAA,EAAIO,MAAM,CAACG;QAAW;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAFnBI,KAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA,eACN,CAAC;AAEP;AAACR,EAAA,CApCQD,OAAO;AAAAgB,EAAA,GAAPhB,OAAO;AAsChB,eAAeA,OAAO;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}